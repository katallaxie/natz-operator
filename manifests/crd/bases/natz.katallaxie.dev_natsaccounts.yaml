---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: natsaccounts.natz.katallaxie.dev
spec:
  group: natz.katallaxie.dev
  names:
    kind: NatsAccount
    listKind: NatsAccountList
    plural: natsaccounts
    singular: natsaccount
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NatsAccount is the Schema for the natsaccounts API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NatsAccountSpec defines the desired state of NatsAccount
            properties:
              allowedUserNamespaces:
                description: |-
                  Namespaces that are allowed for user creation.
                  If a NatsUser is referencing this account outside of these namespaces, the operator will create an event for it saying that it's not allowed.
                items:
                  type: string
                type: array
              exports:
                items:
                  description: Export ...
                  properties:
                    account_token_position:
                      type: integer
                    advertise:
                      type: boolean
                    description:
                      type: string
                    info_url:
                      type: string
                    name:
                      type: string
                    response_threshold:
                      description: |-
                        A Duration represents the elapsed time between two instants
                        as an int64 nanosecond count. The representation limits the
                        largest representable duration to approximately 290 years.
                      format: int64
                      type: integer
                    response_type:
                      description: ResponseType is used to store an export response
                        type
                      type: string
                    revocations:
                      additionalProperties:
                        format: int64
                        type: integer
                      description: RevocationList is used to store a mapping of public
                        keys to unix timestamps
                      type: object
                    service_latency:
                      description: "ServiceLatency is used when observing and exported
                        service for\nlatency measurements.\nSampling 1-100, represents
                        sampling rate, defaults to 100.\nResults is the subject where
                        the latency metrics are published.\nA metric will be defined
                        by the nats-server's ServiceLatency. Time durations\nare in
                        nanoseconds.\nsee https://github.com/nats-io/nats-server/blob/main/server/accounts.go#L524\ne.g.\n\n\t{\n\t
                        \"app\": \"dlc22\",\n\t \"start\": \"2019-09-16T21:46:23.636869585-07:00\",\n\t
                        \"svc\": 219732,\n\t \"nats\": {\n\t   \"req\": 320415,\n\t
                        \  \"resp\": 228268,\n\t   \"sys\": 0\n\t },\n\t \"total\":
                        768415\n\t}"
                      properties:
                        results:
                          description: Subject is a string that represents a NATS
                            subject
                          type: string
                        sampling:
                          type: integer
                      required:
                      - results
                      - sampling
                      type: object
                    subject:
                      description: Subject is a string that represents a NATS subject
                      type: string
                    token_req:
                      type: boolean
                    type:
                      description: ExportType defines the type of import/export.
                      type: integer
                  type: object
                type: array
              imports:
                description: These fields are directly mappejwtd into the NATS JWT
                  claim
                items:
                  description: Import describes a mapping from another account into
                    this one
                  properties:
                    account:
                      type: string
                    allow_trace:
                      type: boolean
                    local_subject:
                      description: |-
                        Local subject used to subscribe (for streams) and publish (for services) to.
                        This value only needs setting if you want to change the value of Subject.
                        If the value of Subject ends in > then LocalSubject needs to end in > as well.
                        LocalSubject can contain $<number> wildcard references where number references the nth wildcard in Subject.
                        The sum of wildcard reference and * tokens needs to match the number of * token in Subject.
                      type: string
                    name:
                      type: string
                    share:
                      type: boolean
                    subject:
                      description: |-
                        Subject field in an import is always from the perspective of the
                        initial publisher - in the case of a stream it is the account owning
                        the stream (the exporter), and in the case of a service it is the
                        account making the request (the importer).
                      type: string
                    to:
                      description: |-
                        Deprecated: use LocalSubject instead
                        To field in an import is always from the perspective of the subscriber
                        in the case of a stream it is the client of the stream (the importer),
                        from the perspective of a service, it is the subscription waiting for
                        requests (the exporter). If the field is empty, it will default to the
                        value in the Subject field.
                      type: string
                    token:
                      type: string
                    type:
                      description: ExportType defines the type of import/export.
                      type: integer
                  type: object
                type: array
              limits:
                description: OperatorLimits are used to limit access by an account
                properties:
                  conn:
                    format: int64
                    type: integer
                  consumer:
                    format: int64
                    type: integer
                  data:
                    format: int64
                    type: integer
                  disallow_bearer:
                    type: boolean
                  disk_max_stream_bytes:
                    format: int64
                    type: integer
                  disk_storage:
                    format: int64
                    type: integer
                  exports:
                    format: int64
                    type: integer
                  imports:
                    format: int64
                    type: integer
                  leaf:
                    format: int64
                    type: integer
                  max_ack_pending:
                    format: int64
                    type: integer
                  max_bytes_required:
                    type: boolean
                  mem_max_stream_bytes:
                    format: int64
                    type: integer
                  mem_storage:
                    format: int64
                    type: integer
                  payload:
                    format: int64
                    type: integer
                  streams:
                    format: int64
                    type: integer
                  subs:
                    format: int64
                    type: integer
                  tiered_limits:
                    additionalProperties:
                      properties:
                        consumer:
                          format: int64
                          type: integer
                        disk_max_stream_bytes:
                          format: int64
                          type: integer
                        disk_storage:
                          format: int64
                          type: integer
                        max_ack_pending:
                          format: int64
                          type: integer
                        max_bytes_required:
                          type: boolean
                        mem_max_stream_bytes:
                          format: int64
                          type: integer
                        mem_storage:
                          format: int64
                          type: integer
                        streams:
                          format: int64
                          type: integer
                      type: object
                    type: object
                  wildcards:
                    type: boolean
                type: object
              operatorSigningKey:
                description: OperatorSigningKey is the reference to the operator signing
                  key
                properties:
                  name:
                    description: Name is the name of the key as a reference
                    type: string
                  namespace:
                    description: Namespace is the namespace of the key as a reference
                    type: string
                required:
                - name
                type: object
              privateKey:
                description: PrivateKey is a reference to a secret that contains the
                  private key
                properties:
                  name:
                    description: Name is the name of the key as a reference
                    type: string
                  namespace:
                    description: Namespace is the namespace of the key as a reference
                    type: string
                required:
                - name
                type: object
              revocations:
                additionalProperties:
                  format: int64
                  type: integer
                description: RevocationList is used to store a mapping of public keys
                  to unix timestamps
                type: object
              signerKeyRef:
                description: SignerKeyRef is the reference to the secret that contains
                  the signing key
                properties:
                  name:
                    description: Name is the name of the key as a reference
                    type: string
                  namespace:
                    description: Namespace is the namespace of the key as a reference
                    type: string
                required:
                - name
                type: object
              signingKeys:
                description: SigningKeys is a list of references to secrets that contain
                  the signing keys
                items:
                  properties:
                    name:
                      description: Name is the name of the key as a reference
                      type: string
                    namespace:
                      description: Namespace is the namespace of the key as a reference
                      type: string
                  required:
                  - name
                  type: object
                type: array
            type: object
          status:
            description: NatsAccountStatus defines the observed state of NatsAccount
            properties:
              conditions:
                description: Conditions is an array of conditions that the operator
                  is currently in.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              controlPaused:
                description: ControlPaused is a flag that indicates if the operator
                  is paused.
                type: boolean
              jwt:
                description: JWT is the JWT that the account is currently using.
                type: string
              lastUpdate:
                description: LastUpdate is the timestamp of the last update.
                format: date-time
                type: string
              phase:
                description: Phase is the current phase of the operator.
                enum:
                - None
                - Pending
                - Creating
                - Synchronized
                - Failed
                type: string
              publicKey:
                description: PublicKey is the public key that the account is currently
                  using.
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
